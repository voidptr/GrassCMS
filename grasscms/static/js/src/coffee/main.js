// Generated by CoffeeScript 1.3.3
(function() {

  (function($, window) {
    var Plugin, defaults, document, pluginName;
    pluginName = 'PersistentGrass';
    document = window.document;
    defaults = {
      debug: false
    };
    Plugin = (function() {

      function Plugin(element, options) {
        this.element = element;
        this.options = $.extend({}, defaults, options);
        this.element = $(this.element);
        this._defaults = defaults;
        this._name = pluginName;
        this.init();
      }

      Plugin.prototype.log = function(msg) {
        if (this.options.debug) {
          return console.log(msg);
        }
      };

      Plugin.prototype.init = function() {
        log("Binding element to events, current element follow");
        log(this.element);
        this.element.on('dragstart', this.dragstart);
        this.element.on('drag', this.drag);
        this.element.on('dragend', this.dragend);
        return this.element.on('changed', this.changed);
      };

      Plugin.prototype.dragstart = function(ev) {
        var _this = this;
        log("Starting drag, hover activated, dragging set to true");
        this.element.hover((function() {
          return $(_this).find('.overlay').fadeIn(150);
        }), (function() {
          return $(_this).find('.overlay').fadeOut(150);
        }));
        return this.element.data('dragging', true);
      };

      Plugin.prototype.drag = function(ev) {
        log("Dragging, position follows");
        this.style.cssText = 'top: ' + ev.x + 'px; position:absolute; left:' + ev.y + "px;";
        return log(this);
      };

      Plugin.prototype.dragend = function(ev) {
        log("Finished dragging, calling remote server to fix position");
        $(this).data('dragging', false);
        $(this).trigger('changed', 'top', ev.y);
        return $(this).trigger('changed', 'left', ev.x);
      };

      Plugin.prototype.changed = function(attr, result) {
        return $.ajax('/object/', {
          type: 'PUT',
          dataType: 'json',
          data: JSON.stringify({
            'id': this.element.attr('id'),
            'attr': attr,
            'result': result
          })
        });
      };

      return Plugin;

    })();
    return $.fn[pluginName] = function(options) {
      return this.each(function() {
        if (!$.data(this, "plugin_" + pluginName)) {
          return $.data(this, "plugin_" + pluginName, new Plugin(this, options));
        }
      });
    };
  })(jQuery, window);

}).call(this);
